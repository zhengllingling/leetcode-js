/* 给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。 */

 function ListNode(val, next) {
    this.val = (val===undefined ? 0 : val)
    this.next = (next===undefined ? null : next)
 }

 class ListNode {
     constructor(val, next){
        this.val = val === undefined ? 0 : val;
        this.next = next === undefined ? null : next;
     }
 }
/**
 * @param {ListNode} head
 * @param {number} n
 * @return {ListNode}
 */
function removeNthFromEnd(head, n) {
    let pre = new ListNode(0, head);
    let start = pre;
    let end = pre;
    while(n != 0) {
        start = start.next;
        n--;
    }
    while(start.next) {
        start = start.next;
        end = end.next;
    }
    end.next = end.next.next;
    return pre.next;
};